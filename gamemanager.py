import random
import time
from typing import List

from character import Character
from food_storage import FoodStorage,all_food
from house import House


class GameManager:
    def __init__(self):
        self.current_hour = 1
        self.hours_in_a_day = 5  # –ú–∞–∫—Å–∏–º—É–º –¥–µ–π—Å—Ç–≤–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∏; –æ–¥–Ω–æ –¥–µ–π—Å—Ç–≤–∏–µ –∑–∞–Ω–∏–º–∞–µ—Ç 1 —á–∞—Å.
        self.current_day = 1
        self.days_to_survive = 20
        self.characters = [Character(self,"–ú–∞–º–∞",8), Character(self,"–ü–∞–ø–∞",10), Character(self,"–ë—Ä–∞—Ç",4), Character(self,"–¢—ã",6)]
        self.food_storage = FoodStorage(self)
        self.fuel_storage = FoodStorage(self,'–ì–∞—Ä–∞–∂')
        self.house = House(self)
        self.today_action_perfomed=0
        self.max_action_to_perform=lambda :max(1, len([hero for hero in self.characters if hero.can_act()]))
        self.today_can_perform_actions = self.max_action_to_perform()
        self.news = [
            "–ú–µ—Å—Ç–Ω—ã–µ –≤–ª–∞—Å—Ç–∏ —Å–æ–æ–±—â–∞—é—Ç –æ–± —É—Ö—É–¥—à–µ–Ω–∏–∏ –ø–æ–≥–æ–¥–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π.",
            "–í –Ω–æ–≤–æ—Å—Ç—è—Ö –æ–±—ä—è–≤–∏–ª–∏ –æ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –ø–µ—Ä–µ–±–æ—è—Ö —Å —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ–º –∏–∑-–∑–∞ –±–ª–∏–∂–∞–π—à–∏—Ö –±–æ–µ–≤.",
            "–°–æ—Å–µ–¥–Ω–∏–π –≥–æ—Ä–æ–¥ –ø–æ–¥–≤–µ—Ä–≥—Å—è –º–∞—Å—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –∞—Ç–∞–∫–µ. –ñ–∏—Ç–µ–ª–∏ –≤ –ø–∞–Ω–∏–∫–µ.",
            "–ì—É–º–∞–Ω–∏—Ç–∞—Ä–Ω–∞—è –ø–æ–º–æ—â—å —Å–∫–æ—Ä–æ –¥–æ–ª–∂–Ω–∞ –ø—Ä–∏–±—ã—Ç—å –≤ –±–ª–∏–∂–∞–π—à–∏–µ –¥–Ω–∏.",
            "–í—á–µ—Ä–∞ –≤–µ—á–µ—Ä–æ–º –±—ã–ª —Å–±–∏—Ç –≤—Ä–∞–∂–µ—Å–∫–∏–π –±–µ—Å–ø–∏–ª–æ—Ç–Ω–∏–∫ –Ω–∞–¥ –≥–æ—Ä–æ–¥–æ–º.",
            "–ú–∏—Ä–Ω—ã–µ –ø–µ—Ä–µ–≥–æ–≤–æ—Ä—ã –Ω–∞—á–Ω—É—Ç—Å—è –≤ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é, —Å–æ–æ–±—â–∞—é—Ç –∏—Å—Ç–æ—á–Ω–∏–∫–∏.",
            "–ñ–∏—Ç–µ–ª–∏ –≥–æ—Ä–æ–¥–∞ –æ—Ä–≥–∞–Ω–∏–∑—É—é—Ç –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω—É—é –æ–±–æ—Ä–æ–Ω—É."
        ]


    def broadcast_news(self):
        # –í—ã–±–æ—Ä —Å–ª—É—á–∞–π–Ω–æ–π –Ω–æ–≤–æ—Å—Ç–∏ –∏–∑ —Å–ø–∏—Å–∫–∞
        news_of_the_day = random.choice(self.news)
        print(f"–ù–æ–≤–æ—Å—Ç–∏ –¥–Ω—è: {news_of_the_day}")

    def new_day(self):
        self.check_elictricity()
        self.current_hour = 1
        self.current_day += 1
        self.today_action_perfomed = 0
        self.today_can_perform_actions=self.max_action_to_perform()
        for food in all_food:
            food.new_day()
        self.house.generator.new_day()
        self.broadcast_news()
        for character in self.characters:
           if character.health<=3:
               damage=random.randint(0,1)/2
               if damage:
                  character.take_damage(damage)


    def perform_action(self, character_index, action_type):
        if self.today_action_perfomed >= self.today_can_perform_actions:
            print("–°–µ–≥–æ–¥–Ω—è –∞–∫—Ç–∏–≤–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è —É –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å")
            return False
        if self.today_action_perfomed >= self.hours_in_a_day:
            print("–£–∂–µ –Ω–∞—Å—Ç—É–ø–∏–ª–∞ –Ω–æ—á—å –∏ –Ω–∏—á–µ–≥–æ –Ω–µ –≤–∏–¥–Ω–æ")
            return False
        character = self.characters[character_index]

        print(f'{character.name} –ø—ã—Ç–∞–µ—Ç—Å—è {action_type}')
        result = False
        if character.dead:
            print(f'{character.name} —É–º–µ—Ä')
        else:
            if action_type == "–ø–æ–∫—É—à–∞—Ç—å":
                result = character.feed(self.food_storage)
            elif action_type == '–≤—ã–π—Ç–∏ –∏–∑ –ø–æ–¥–≤–∞–ª–∞':
                result = character.return_from_basement()
            else:
                if not character.can_act():
                    print(f"{character.name} –Ω–µ –º–æ–∂–µ—Ç –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å.")
                    return False
                if action_type == "—Å–æ–±—Ä–∞—Ç—å —Ä–µ—Å—É—Ä—Å—ã":
                    resource=int(input('–ß—Ç–æ –∏—Å–∫–∞—Ç—å? 1-–∏—Å–∫–∞—Ç—å –µ–¥—É, 2 - –∏—Å–∫–∞—Ç—å —Ç–æ–ø–ª–∏–≤–æ? :'))
                    if resource==1:
                        resource='–µ–¥–∞'
                        storage=self.food_storage
                    elif resource==2:
                        resource='—Ç–æ–ø–ª–∏–≤–æ'
                        storage=self.fuel_storage
                    result = character.gather_food(storage,resource_type=resource)
                elif action_type == "–ø–æ—á–∏–Ω–∏—Ç—å –¥–æ–º":
                    result = self.house.repair()
                elif action_type =='–ø–æ—á–∏–Ω–∏—Ç—å —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫':
                    result=self.food_storage.repair()
                elif action_type =='–ø–æ—á–∏–Ω–∏—Ç—å –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä':
                    result=self.fuel_storage.repair()
                elif action_type == '—Å–ø—Ä—è—Ç–∞—Ç—å—Å—è –≤ –ø–æ–¥–≤–∞–ª':
                    result =character.hide_in_basement()
                elif action_type == '–≤–∫–ª—é—á–∏—Ç—å –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä':
                    result = self.house.generator.turn_on()
                elif action_type == '–≤—ã–∫–ª—é—á–∏—Ç—å –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä':
                    result = self.house.generator.turn_off()
                elif action_type=='–≤—ã–∫–∏–Ω—É—Ç—å –º—É—Å–æ—Ä':
                    result=self.food_storage.clear_trash()


        if result:
            self.today_action_perfomed += 1
            self.current_hour += 1
            self.check_bombardment()
            for character in self.characters:
                character.reset_actions()  # –°–±—Ä–æ—Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
        return result

    def check_bombardment(self):
        if random.random() < 0.15:  # 10% —à–∞–Ω—Å –Ω–∞ –æ–±—Å—Ç—Ä–µ–ª –∫–∞–∂–¥—ã–π —á–∞—Å
            self.house.bombard()


            print('-----------------------')
            time.sleep(0.2)
            print("\t–ü—Ä–∏–ª–µ—Ç! –î–æ–º –∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∏ –ø–æ–ª—É—á–∏–ª–∏ —É—Ä–æ–Ω.")
            for character in self.characters:
                if character.in_basement():
                    continue
                if character.location!='–í –¥–æ–º–µ':
                    continue

                damage = random.randint(0, 2)
                if damage>0:
                    character.take_damage(damage)
            time.sleep(0.5)
            if self.house.durability<90:
                if random.random()<0.3:
                    self.food_storage._hp=0
                    print('–•–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫ –≤—ã–≤–µ–¥–µ–Ω –∏–∑ —Å—Ç—Ä–æ—è')
                if random.random() < 0.3:
                    self.fuel_storage._hp = 0
                    print('–ì–∞—Ä–∞–∂ –≤—ã–≤–µ–¥–µ–Ω –∏–∑ —Å—Ç—Ä–æ—è')
            print('üí•')
    def check_elictricity(self):
        if self.house.electricity_from_outside and random.random()<0.2:
            print('-----------------------')
            time.sleep(0.2)
            self.house.electricity_from_outside=False
            print('\t–û—Ç–∫–ª—é—á–∏–ª–∏ —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ!')
            return
        if not self.house.electricity_from_outside and random.random()<0.6:
            print('-----------------------')
            self.house.electricity_from_outside = True
            print('\t–≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ —Å–Ω–æ–≤–∞ –¥–∞–ª–∏!')

            return


    def display_status(self):
        print(f"–î–µ–Ω—å: {self.current_day}/{self.days_to_survive}, –ß–∞—Å: {self.current_hour}/{self.hours_in_a_day}, –ê–∫—Ç–∏–≤–Ω—ã—Ö –î–µ–π—Å—Ç–≤–∏–π: {self.today_action_perfomed}/{self.today_can_perform_actions}")
        for i,character in enumerate(self.characters):
            if character.dead:
                continue
            print('\t\t',i+1,character)
        print(self.house)

    def player_action(self):
        self.display_status()
        action_performed = False
        while not action_performed:
            end=self.check_end_day()
            if end:
                break
            character_choice=-1
            while character_choice<0 or character_choice>len(self.characters):
                try:
                    character_choice = int(input("–í—ã–±–µ—Ä–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ (1-4): "))
                except:
                    print('–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 4')


            if self.characters[character_choice-1].in_basement():
                input_action_txt = '–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ (–≤—ã–π—Ç–∏ –∏–∑ –ø–æ–¥–≤–∞–ª–∞-7'
            else:
                input_action_txt = f"–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ (–ø–æ–∫—É—à–∞—Ç—å-1, —Å–æ–±—Ä–∞—Ç—å —Ä–µ—Å—É—Ä—Å—ã-2, –ø–æ—á–∏–Ω–∏—Ç—å –¥–æ–º-3, –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫-4 "
                if  self.food_storage._hp==0:
                    input_action_txt += ', –ø–æ—á–∏–Ω–∏—Ç—å —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫-5'
                if  self.fuel_storage._hp==0:
                    input_action_txt += ', –ø–æ—á–∏–Ω–∏—Ç—å –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä-11'

                input_action_txt+=', —Å–ø—Ä—è—Ç–∞—Ç—å—Å—è –≤ –ø–æ–¥–≤–∞–ª-6'
                if not self.house.generator.is_turned_on:
                    can_turn_on_generator=not self.house.electricity_from_outside
                    if can_turn_on_generator:
                        if not self.house.generator.is_turned_on_and_working():
                            input_action_txt+=', –≤–∫–ª—é—á–∏—Ç—å –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä-9'
                if self.house.generator.is_turned_on:
                        input_action_txt += ', –≤—ã–∫–ª—é—á–∏—Ç—å –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä-0'
                input_action_txt+=', –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –≥–∞—Ä–∞–∂ - 8'
            input_action_txt+='):'

            action_choice = input(input_action_txt)
            try:
                action_choice=int(action_choice)
                if action_choice==1:
                    action_choice='–ø–æ–∫—É—à–∞—Ç—å'
                elif action_choice==2:
                    action_choice='—Å–æ–±—Ä–∞—Ç—å —Ä–µ—Å—É—Ä—Å—ã'
                elif action_choice==3:
                    action_choice='–ø–æ—á–∏–Ω–∏—Ç—å –¥–æ–º'
                elif action_choice==4:
                    action_choice = '–ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫'
                elif action_choice==5:
                    action_choice='–ø–æ—á–∏–Ω–∏—Ç—å —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫'
                elif action_choice==6:
                    action_choice='—Å–ø—Ä—è—Ç–∞—Ç—å—Å—è –≤ –ø–æ–¥–≤–∞–ª'
                elif action_choice==7:
                    action_choice = '–≤—ã–π—Ç–∏ –∏–∑ –ø–æ–¥–≤–∞–ª–∞'
                elif action_choice==8:
                    action_choice = '–ø—Ä–æ–≤–µ—Ä–∏—Ç—å –≥–∞—Ä–∞–∂'
                elif action_choice==9:
                    action_choice = '–≤–∫–ª—é—á–∏—Ç—å –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä'
                elif action_choice==0:
                    action_choice = '–≤—ã–∫–ª—é—á–∏—Ç—å –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä'
                elif action_choice==11:
                    action_choice='–ø–æ—á–∏–Ω–∏—Ç—å –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä'
            except:
                pass
            if action_choice=='–ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫':
                self.food_storage.status()
                if any([food.is_expired for food in self.food_storage.food ]):
                    trash_out=int(input("–í—ã–∫–∏–Ω—É—Ç—å –º—É—Å–æ—Ä? 1-–¥–∞, 2-–Ω–µ—Ç"))
                    if trash_out==1:
                        action_performed=self.perform_action(character_choice - 1, '–≤—ã–∫–∏–Ω—É—Ç—å –º—É—Å–æ—Ä')
                    else:
                        action_performed=True
            elif action_choice=='–ø—Ä–æ–≤–µ—Ä–∏—Ç—å –≥–∞—Ä–∞–∂':
                self.fuel_storage.status()
                action_performed=True
            else:
                action_performed = self.perform_action(character_choice-1, action_choice)
        if self.check_end_day():
            for i in range(self.hours_in_a_day-self.current_hour):
                self.check_bombardment()
            print("–ö–æ–Ω–µ—Ü –¥–Ω—è")
            self.new_day()
            time.sleep(1)

    def check_end_day(self):
        if self.current_hour > self.hours_in_a_day or self.today_action_perfomed >= self.today_can_perform_actions:

            return True
        return False

    def check_endings(self):
        alive_count = sum(not char.dead for char in self.characters)
        total_count = len(self.characters)

        print("–ö–æ–Ω–µ—Ü –∏–≥—Ä—ã.")
        print(f"–í—ã–∂–∏–ª–æ {alive_count} –∏–∑ {total_count} —á–ª–µ–Ω–æ–≤ —Å–µ–º—å–∏.")
        good_end = True
        if alive_count == total_count:
            print(
                "–í—Å–µ —á–ª–µ–Ω—ã —Å–µ–º—å–∏ –≤—ã–∂–∏–ª–∏. –í—ã –±–ª–µ—Å—Ç—è—â–µ —Å–ø—Ä–∞–≤–∏–ª–∏—Å—å —Å –∏—Å–ø—ã—Ç–∞–Ω–∏—è–º–∏ –∏ —Å—É–º–µ–ª–∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å–≤–æ—é —Å–µ–º—å—é –≤ —Ü–µ–ª–æ—Å—Ç–∏ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.")
        elif alive_count >= total_count // 2:
            print(
                "–ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ —á–ª–µ–Ω–æ–≤ –≤–∞—à–µ–π —Å–µ–º—å–∏ –≤—ã–∂–∏–ª–æ. –ù–µ—Å–º–æ—Ç—Ä—è –Ω–∞ –ø–æ—Ç–µ—Ä–∏, –≤—ã —Å–º–æ–≥–ª–∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —è–¥—Ä–æ —Å–µ–º—å–∏ –∏ —Ç–µ–ø–µ—Ä—å –≤–ø–µ—Ä–µ–¥–∏ —É –≤–∞—Å –≤—Ä–µ–º—è –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∏ –≤–∑–∞–∏–º–æ–ø–æ–º–æ—â–∏.")
        elif alive_count > 0:
            print(
                "–í—ã–∂–∏–ª–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ —á–ª–µ–Ω–æ–≤ —Å–µ–º—å–∏. –ü–æ—Ç–µ—Ä–∏ –æ–≥—Ä–æ–º–Ω—ã, –∏ —ç—Ç–æ –æ—Å—Ç–∞–≤–∏—Ç —Å–ª–µ–¥ –≤ –≤–∞—à–∏—Ö —Å–µ—Ä–¥—Ü–∞—Ö, –Ω–æ –≤—ã –¥–æ–ª–∂–Ω—ã –∏–¥—Ç–∏ –¥–∞–ª—å—à–µ.")
        else:
            print(
                "–ù–∏–∫—Ç–æ –Ω–µ –≤—ã–∂–∏–ª. –í–∞—à–∞ –∏—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –∑–¥–µ—Å—å, –≤ —Ç—Ä–∞–≥–µ–¥–∏–∏ –∏ —Ä–∞–∑—Ä—É—à–µ–Ω–∏–∏. –≠—Ç–æ –Ω–∞–ø–æ–º–∏–Ω–∞–µ—Ç –æ –∂–µ—Å—Ç–æ–∫–æ—Å—Ç–∏ —Å–∏—Ç—É–∞—Ü–∏–∏, —Å –∫–æ—Ç–æ—Ä–æ–π –≤—ã —Å—Ç–æ–ª–∫–Ω—É–ª–∏—Å—å.")
            good_end = False
        if good_end:
            print("–í—ã —Å–º–æ–≥–ª–∏ –≤—ã–∂–∏—Ç—å 20 –¥–Ω–µ–π –≤ —É—Å–ª–æ–≤–∏—è—Ö –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã—Ö –∏—Å–ø—ã—Ç–∞–Ω–∏–π –∏ –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ—Å—Ç–∏.")
            time.sleep(2)
            print("–ö–∞–∫ —Ç–æ–ª—å–∫–æ —Ç—Ä–µ–≤–æ–≥–∏ —Å—Ç–∞–ª–∏ —Ä–µ–∂–µ, –º—ã —Å–º–æ–≥–ª–∏ –Ω–∞–∫–æ–Ω–µ—Ü –≤—ã–¥–æ—Ö–Ω—É—Ç—å —Å –æ–±–ª–µ–≥—á–µ–Ω–∏–µ–º.")
            time.sleep(1)
            print(
                "–í–æ–∫—Ä—É–≥ –ø–æ-–ø—Ä–µ–∂–Ω–µ–º—É –æ—Å—Ç–∞—é—Ç—Å—è —Ä–∞–∑—Ä—É—à–µ–Ω–∏—è, –Ω–æ —Ç–µ–ø–µ—Ä—å –ø–µ—Ä–µ–¥ –≤–∞–º–∏ —Å—Ç–æ–∏—Ç –Ω–æ–≤–∞—è –∑–∞–¥–∞—á–∞ ‚Äî –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–∞—à–µ–≥–æ –¥–æ–º–∞ –∏ –∂–∏–∑–Ω–∏.")
            time.sleep(2)
            print("–≠—Ç–∏ 20 –¥–Ω–µ–π –Ω–∞–≤—Å–µ–≥–¥–∞ –∏–∑–º–µ–Ω—è—Ç –≤–∞—à–µ –≤–æ—Å–ø—Ä–∏—è—Ç–∏–µ –º–∏—Ä–∞. –í—ã –ø–æ–Ω—è–ª–∏ —Ü–µ–Ω–Ω–æ—Å—Ç—å —Å–µ–º—å–∏, –¥–æ–º–∞ –∏ –º–∏—Ä–Ω–æ–π –∂–∏–∑–Ω–∏.")
            time.sleep(1)
            print("–í–∞—à–µ —Å–ª–µ–¥—É—é—â–µ–µ –ª–µ—Ç–æ –±—É–¥–µ—Ç —É–∂–µ –¥—Ä—É–≥–∏–º. –ù–æ —Å–µ–π—á–∞—Å, –≥–ª–∞–≤–Ω–æ–µ ‚Äî –≤—ã –≤–º–µ—Å—Ç–µ –∏ –≤—ã–∂–∏–ª–∏. –ò —ç—Ç–æ –Ω–æ–≤–æ–µ –Ω–∞—á–∞–ª–æ.")

    # –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
manager = GameManager()
